module hex_to_7segSW9 (out1, out2, out3, in);

	output [6:0] out1;
	output [6:0] out2;
	output [6:0] out3;
	input [9:0] in;
	
	reg [6:0] out1;
	reg [6:0] out2;
	reg [6:0] out3;
	
	always @ (*)
		case(in)
		
		4'h0: out1 = 7'b1000000;				// -- 0 --
		4'h1: out1 = 7'b1111001;				// │		 │
		4'h2: out1 = 7'b0100100;				// 5	    1
		4'h3: out1 = 7'b0110000;				// │      │
		4'h4: out1 = 7'b0011001;				// -- 6 --
		4'h5: out1 = 7'b0010010;				// │      │
		4'h6: out1 = 7'b0000010;				// 4      2
		4'h7: out1 = 7'b1111000;				// │      │
		4'h8: out1 = 7'b0000000;				// -- 3 --
		4'h9: out1 = 7'b0011000;
		4'ha: out1 = 7'b0001000;
		4'hb: out1 = 7'b0000011;
		4'hc: out1 = 7'b1000110;
		4'hd: out1 = 7'b0100001;
		4'he: out1 = 7'b0000110;
		4'hf: out1 = 7'b0001110;
		
		
		4'h0: out2 = 7'b1000000;				// -- 0 --
		4'h1: out2 = 7'b1111001;				// │		 │
		4'h2: out2 = 7'b0100100;				// 5	    1
		4'h3: out2 = 7'b0110000;				// │      │
		4'h4: out2 = 7'b0011001;				// -- 6 --
		4'h5: out2 = 7'b0010010;				// │      │
		4'h6: out2 = 7'b0000010;				// 4      2
		4'h7: out2 = 7'b1111000;				// │      │
		4'h8: out2 = 7'b0000000;				// -- 3 --
		4'h9: out2 = 7'b0011000;
		4'ha: out2 = 7'b0001000;
		4'hb: out2 = 7'b0000011;
		4'hc: out2 = 7'b1000110;
		4'hd: out2 = 7'b0100001;
		4'he: out2 = 7'b0000110;
		4'hf: out2 = 7'b0001110;
		
		
		4'h0: out3 = 7'b1000000;				// -- 0 --
		4'h1: out3 = 7'b1111001;				// │		 │
		4'h2: out3 = 7'b0100100;				// 5	    1
		4'h3: out3 = 7'b0110000;				// │      │
		4'h4: out3 = 7'b0011001;				// -- 6 --
		4'h5: out3 = 7'b0010010;				// │      │
		4'h6: out3 = 7'b0000010;				// 4      2
		4'h7: out3 = 7'b1111000;				// │      │
		4'h8: out3 = 7'b0000000;				// -- 3 --
		4'h9: out3 = 7'b0011000;
		4'ha: out3 = 7'b0001000;
		4'hb: out3 = 7'b0000011;
		4'hc: out3 = 7'b1000110;
		4'hd: out3 = 7'b0100001;
		4'he: out3 = 7'b0000110;
		4'hf: out3 = 7'b0001110;
		endcase
		
endmodule
